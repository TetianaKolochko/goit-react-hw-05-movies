{"version":3,"file":"static/js/186.8f1e4550.chunk.js","mappings":"iMAuCA,UAlCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAUA,IARAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBN,GACfO,MAAK,SAAAC,GACJJ,EAAWI,EAASC,KAAKC,YAE1BC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QAC7B,CAACZ,IAECG,EAGL,OACE,+BACE,wBACGA,EAAQY,OAAS,EAChBZ,EAAQa,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzB,OACE,2BACE,uBAAID,KACJ,uBAAIC,MAFGF,OAOb","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState } from 'react';\nimport { fetchMovieReviews } from 'Services/Api';\nimport { useEffect } from 'react';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    fetchMovieReviews(movieId)\n      .then(response => {\n        setReviews(response.data.results);\n      })\n      .catch(erorr => console.log(erorr));\n  }, [movieId]);\n\n  if (!reviews) {\n    return;\n  }\n  return (\n    <>\n      <ul>\n        {reviews.length > 1 ? (\n          reviews.map(({ id, author, content }) => {\n            return (\n              <li key={id}>\n                <b>{author}</b>\n                <p>{content}</p>\n              </li>\n            );\n          })\n        ) : (\n          <p>We don't have any reviews for this movie</p>\n        )}\n      </ul>\n    </>\n  );\n};\nexport default Reviews;\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","fetchMovieReviews","then","response","data","results","catch","erorr","console","log","length","map","id","author","content"],"sourceRoot":""}